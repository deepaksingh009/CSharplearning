

Here's what you need to know about using const, static, and readonly:

If you know the value will never, ever, ever change for any reason, use const.
If you're unsure of whether or not the value will change, but you don't want other classes or code to be able to change it, use readonly.
If you need a field to be a property of a type, and not a property of an instance of that type, use static.
A const value is also implicitly static.



Why keyword 'this' cannot be used in a static method?

Because this points to an instance of the class, in the static method you don't have an instance.

The this keyword refers to the current instance of the class. Static member functions do not have a this pointer
You'll notice the definition of a static member is

Use the static modifier to declare a static member, which belongs to the type itself rather than to a specific object
Which is why this has nothing to point to.

this is an instance of the current object. With a static method, there is no current object, and as such, this doesn't exist.
It's not really a constraint, but the entire point of a method being static.


We dont use static keyword with interface,struct,indexer.

Bascially we use static keyword:-
1.Whenever we dont want to share same data across the application.
2.In term's of performance,it work very fast because we don't use new keyword.whenever we use new keyword it will take some space in cpu so 
it will take time in processing when we create new instance using new keyword.

